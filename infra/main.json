{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.3.12046",
      "templateHash": "10680848260313514895"
    }
  },
  "parameters": {
    "functionAppDockerImage": {
      "type": "string",
      "defaultValue": "DOCKER|argus.azurecr.io/argus-backend:latest"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('sa{0}', uniqueString(resourceGroup().id))]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('cb{0}', uniqueString(resourceGroup().id))]"
    },
    "cosmosDbDatabaseName": {
      "type": "string",
      "defaultValue": "doc-extracts"
    },
    "cosmosDbContainerName": {
      "type": "string",
      "defaultValue": "documents"
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('fa{0}', uniqueString(resourceGroup().id))]"
    },
    "functionAppStorageName": {
      "type": "string",
      "defaultValue": "[format('fs{0}', uniqueString(resourceGroup().id))]"
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('{0}-plan', parameters('functionAppName'))]"
    },
    "documentIntelligenceName": {
      "type": "string",
      "defaultValue": "[format('di{0}', uniqueString(resourceGroup().id))]"
    },
    "azureOpenaiEndpoint": {
      "type": "securestring"
    },
    "azureOpenaiKey": {
      "type": "securestring"
    },
    "azureOpenaiModelDeploymentName": {
      "type": "string"
    },
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-ddTHH:mm:ssZ')]"
    },
    "roleDefinitionId": {
      "type": "string",
      "defaultValue": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
    }
  },
  "variables": {
    "$fxv#0": "{\r\n    \"definition\": {\r\n      \"$schema\": \"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#\",\r\n      \"contentVersion\": \"1.0.0.0\",\r\n      \"triggers\": {},\r\n      \"actions\": {\r\n        \"If_email_has_attachments_and_key_subject_phrase\": {\r\n          \"type\": \"If\",\r\n          \"expression\": {\r\n            \"and\": [\r\n              {\r\n                \"equals\": [\r\n                  \"@triggerBody()?['hasAttachments']\",\r\n                  true\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          \"actions\": {\r\n            \"For_each\": {\r\n              \"type\": \"Foreach\",\r\n              \"foreach\": \"@triggerBody()?['attachments']\",\r\n              \"actions\": {\r\n                \"Create_blob_(V2)_1\": {\r\n                  \"type\": \"ApiConnection\",\r\n                  \"inputs\": {\r\n                    \"host\": {\r\n                      \"connection\": {\r\n                        \"name\": \"@parameters('$connections')['azureblob']['connectionId']\"\r\n                      }\r\n                    },\r\n                    \"method\": \"post\",\r\n                    \"body\": \"@base64ToBinary(item()?['contentBytes'])\",\r\n                    \"headers\": {\r\n                      \"ReadFileMetadataFromServer\": true\r\n                    },\r\n                    \"path\": \"/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('storageAccount')))}/files\",\r\n                    \"queries\": {\r\n                      \"folderPath\": \"datasets/default-dataset\",\r\n                      \"name\": \"@item()?['name']\",\r\n                      \"queryParametersSingleEncoded\": true\r\n                    }\r\n                  },\r\n                  \"runtimeConfiguration\": {\r\n                    \"contentTransfer\": {\r\n                      \"transferMode\": \"Chunked\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"else\": {\r\n            \"actions\": {}\r\n          },\r\n          \"runAfter\": {}\r\n        }\r\n      },\r\n      \"outputs\": {},\r\n      \"parameters\": {\r\n        \"storageAccount\": {\r\n          \"defaultValue\": \"\",\r\n          \"type\": \"String\"\r\n        },\r\n        \"$connections\": {\r\n          \"type\": \"Object\",\r\n          \"defaultValue\": {}\r\n        }\r\n      }\r\n    }\r\n  }",
    "sanitizedTimestamp": "[replace(replace(parameters('timestamp'), '-', ''), ':', '')]",
    "roleAssignmentName": "[guid(format('ra-uniqueString-{0}-{1}-{2}', resourceGroup().id, parameters('roleDefinitionId'), variables('sanitizedTimestamp')))]",
    "commonTags": {
      "solution": "ARGUS-1.0"
    },
    "logicAppDefinition": "[json(variables('$fxv#0'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'datasets')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-04-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbDatabaseName')]"
        }
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbContainerName')]",
          "partitionKey": {
            "paths": [
              "/partitionKey"
            ],
            "kind": "Hash"
          },
          "defaultTtl": -1
        }
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), 'configuration')]",
      "properties": {
        "resource": {
          "id": "configuration",
          "partitionKey": {
            "paths": [
              "/partitionKey"
            ],
            "kind": "Hash"
          },
          "defaultTtl": -1
        }
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('functionAppStorageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', parameters('functionAppStorageName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('functionAppStorageName'), 'default', 'app-artifacts')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('functionAppStorageName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "logAnalyticsWorkspace",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30
      },
      "tags": {
        "solution": "ARGUS-1.0"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "app-insights",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', 'logAnalyticsWorkspace')]"
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', 'logAnalyticsWorkspace')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "Linux",
      "sku": {
        "name": "B1",
        "tier": "Basic"
      },
      "properties": {
        "reserved": true
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-04-30",
      "name": "[parameters('documentIntelligenceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "FormRecognizer",
      "properties": {
        "apiProperties": {},
        "customSubDomainName": "[parameters('documentIntelligenceName')]"
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "tags": "[variables('commonTags')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "pythonVersion": "3.11",
          "linuxFxVersion": "[parameters('functionAppDockerImage')]",
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('functionAppStorageName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "functionapp-content"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', 'app-insights'), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "https://index.docker.io"
            },
            {
              "name": "COSMOS_DB_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-04-15').documentEndpoint]"
            },
            {
              "name": "COSMOS_DB_KEY",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-04-15').primaryMasterKey]"
            },
            {
              "name": "COSMOS_DB_DATABASE_NAME",
              "value": "[parameters('cosmosDbDatabaseName')]"
            },
            {
              "name": "COSMOS_DB_CONTAINER_NAME",
              "value": "[parameters('cosmosDbContainerName')]"
            },
            {
              "name": "DOCUMENT_INTELLIGENCE_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('documentIntelligenceName')), '2021-04-30').endpoint]"
            },
            {
              "name": "DOCUMENT_INTELLIGENCE_KEY",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('documentIntelligenceName')), '2021-04-30').key1]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[parameters('azureOpenaiEndpoint')]"
            },
            {
              "name": "AZURE_OPENAI_KEY",
              "value": "[parameters('azureOpenaiKey')]"
            },
            {
              "name": "AZURE_OPENAI_MODEL_DEPLOYMENT_NAME",
              "value": "[parameters('azureOpenaiModelDeploymentName')]"
            },
            {
              "name": "FUNCTIONS_WORKER_PROCESS_COUNT",
              "value": "1"
            },
            {
              "name": "WEBSITE_MAX_DYNAMIC_APPLICATION_SCALE_OUT",
              "value": "1"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'app-insights')]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('documentIntelligenceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionAppStorageName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2018-07-01-preview",
      "name": "azureblob",
      "location": "[parameters('location')]",
      "kind": "V1",
      "properties": {
        "alternativeParameterValues": {},
        "api": {
          "id": "[format('subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureblob', subscription().subscriptionId, parameters('location'))]"
        },
        "customParameterValues": {},
        "displayName": "azureblob",
        "parameterValueSet": {
          "name": "managedIdentityAuth",
          "values": {}
        }
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "logicAppName",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": "[variables('logicAppDefinition').definition]",
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/connections/azureblob', subscription().subscriptionId, resourceGroup().name)]",
                "connectionName": "azureblob",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                },
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureblob', subscription().subscriptionId, parameters('location'))]"
              }
            }
          },
          "storageAccount": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', 'azureblob')]"
      ]
    }
  ],
  "outputs": {
    "resourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "functionAppEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01').defaultHostName]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "containerName": {
      "type": "string",
      "value": "datasets"
    },
    "storageAccountKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-05-01').keys[0].value]"
    }
  }
}